// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.migration
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241017105747_AddRoles")]
    partial class AddRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Domain.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DiscussionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServerFileName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("TicketId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Application Bug"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Network Issue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User Issue"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Domain.Entities.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpectedDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpectedDays = 14,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2,
                            ExpectedDays = 7,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            ExpectedDays = 1,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedToId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClosedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PriorityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RaisedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RaisedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RaisedBy");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Description for ticket 2",
                            ExpectedDate = new DateTime(2024, 9, 10, 12, 57, 46, 682, DateTimeKind.Unspecified).AddTicks(9585),
                            PriorityId = 1,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 3, 12, 57, 46, 682, DateTimeKind.Unspecified).AddTicks(9585),
                            Status = "NEW",
                            Summary = "Sample ticket 2"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Description for ticket 3",
                            ExpectedDate = new DateTime(2024, 3, 26, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1430),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1430),
                            Status = "NEW",
                            Summary = "Sample ticket 3"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 8, 28, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1475),
                            Description = "Description for ticket 4",
                            ExpectedDate = new DateTime(2024, 8, 28, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1475),
                            PriorityId = 2,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 8, 14, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1475),
                            Status = "CLOSED",
                            Summary = "Sample ticket 4"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 9, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1495),
                            Description = "Description for ticket 5",
                            ExpectedDate = new DateTime(2024, 9, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1495),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1495),
                            Status = "CLOSED",
                            Summary = "Sample ticket 5"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Description for ticket 6",
                            ExpectedDate = new DateTime(2024, 5, 18, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1508),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 5, 11, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1508),
                            Status = "NEW",
                            Summary = "Sample ticket 6"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Description for ticket 7",
                            ExpectedDate = new DateTime(2024, 1, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1520),
                            PriorityId = 2,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 6, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1520),
                            Status = "OPEN",
                            Summary = "Sample ticket 7"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Description for ticket 8",
                            ExpectedDate = new DateTime(2024, 9, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1532),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1532),
                            Status = "NEW",
                            Summary = "Sample ticket 8"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Description for ticket 9",
                            ExpectedDate = new DateTime(2024, 3, 31, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1544),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 17, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1544),
                            Status = "NEW",
                            Summary = "Sample ticket 9"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Description for ticket 10",
                            ExpectedDate = new DateTime(2024, 8, 17, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1556),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 8, 16, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1556),
                            Status = "OPEN",
                            Summary = "Sample ticket 10"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "Description for ticket 11",
                            ExpectedDate = new DateTime(2024, 3, 31, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1568),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 30, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1568),
                            Status = "OPEN",
                            Summary = "Sample ticket 11"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Description for ticket 12",
                            ExpectedDate = new DateTime(2024, 3, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1606),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 19, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1606),
                            Status = "NEW",
                            Summary = "Sample ticket 12"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            Description = "Description for ticket 13",
                            ExpectedDate = new DateTime(2024, 6, 11, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1620),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 6, 4, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1620),
                            Status = "NEW",
                            Summary = "Sample ticket 13"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Description = "Description for ticket 14",
                            ExpectedDate = new DateTime(2024, 8, 10, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1631),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 27, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1631),
                            Status = "NEW",
                            Summary = "Sample ticket 14"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Description = "Description for ticket 15",
                            ExpectedDate = new DateTime(2024, 6, 3, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1643),
                            PriorityId = 2,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 5, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1643),
                            Status = "NEW",
                            Summary = "Sample ticket 15"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Description for ticket 16",
                            ExpectedDate = new DateTime(2024, 7, 21, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1655),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1655),
                            Status = "OPEN",
                            Summary = "Sample ticket 16"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            Description = "Description for ticket 17",
                            ExpectedDate = new DateTime(2024, 3, 15, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1666),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 14, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1666),
                            Status = "OPEN",
                            Summary = "Sample ticket 17"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 2, 27, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1677),
                            Description = "Description for ticket 18",
                            ExpectedDate = new DateTime(2024, 2, 27, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1677),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1677),
                            Status = "CLOSED",
                            Summary = "Sample ticket 18"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Description = "Description for ticket 19",
                            ExpectedDate = new DateTime(2024, 3, 27, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1690),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1690),
                            Status = "OPEN",
                            Summary = "Sample ticket 19"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            Description = "Description for ticket 20",
                            ExpectedDate = new DateTime(2024, 2, 5, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1702),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 4, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1702),
                            Status = "OPEN",
                            Summary = "Sample ticket 20"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 3,
                            Description = "Description for ticket 21",
                            ExpectedDate = new DateTime(2024, 5, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1751),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 4, 29, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1751),
                            Status = "OPEN",
                            Summary = "Sample ticket 21"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            Description = "Description for ticket 22",
                            ExpectedDate = new DateTime(2024, 1, 19, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1763),
                            PriorityId = 2,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1763),
                            Status = "OPEN",
                            Summary = "Sample ticket 22"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 1,
                            Description = "Description for ticket 23",
                            ExpectedDate = new DateTime(2024, 5, 10, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1775),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 5, 3, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1775),
                            Status = "OPEN",
                            Summary = "Sample ticket 23"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 1,
                            Description = "Description for ticket 24",
                            ExpectedDate = new DateTime(2024, 1, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1786),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 6, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1786),
                            Status = "OPEN",
                            Summary = "Sample ticket 24"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            Description = "Description for ticket 25",
                            ExpectedDate = new DateTime(2024, 2, 29, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1798),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 28, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1798),
                            Status = "OPEN",
                            Summary = "Sample ticket 25"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            Description = "Description for ticket 26",
                            ExpectedDate = new DateTime(2024, 7, 31, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1809),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 30, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1809),
                            Status = "OPEN",
                            Summary = "Sample ticket 26"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            Description = "Description for ticket 27",
                            ExpectedDate = new DateTime(2024, 5, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1821),
                            PriorityId = 1,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 4, 25, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1821),
                            Status = "OPEN",
                            Summary = "Sample ticket 27"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            Description = "Description for ticket 28",
                            ExpectedDate = new DateTime(2024, 1, 14, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1833),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 7, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1833),
                            Status = "OPEN",
                            Summary = "Sample ticket 28"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            Description = "Description for ticket 29",
                            ExpectedDate = new DateTime(2024, 2, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1844),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1844),
                            Status = "NEW",
                            Summary = "Sample ticket 29"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            Description = "Description for ticket 30",
                            ExpectedDate = new DateTime(2024, 4, 16, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1888),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 4, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1888),
                            Status = "NEW",
                            Summary = "Sample ticket 30"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 3,
                            Description = "Description for ticket 31",
                            ExpectedDate = new DateTime(2024, 10, 21, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1901),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 10, 7, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1901),
                            Status = "NEW",
                            Summary = "Sample ticket 31"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 3, 5, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1912),
                            Description = "Description for ticket 32",
                            ExpectedDate = new DateTime(2024, 3, 5, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1912),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1912),
                            Status = "CLOSED",
                            Summary = "Sample ticket 32"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            Description = "Description for ticket 33",
                            ExpectedDate = new DateTime(2024, 2, 15, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1924),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 14, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1924),
                            Status = "NEW",
                            Summary = "Sample ticket 33"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 2,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 3, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1935),
                            Description = "Description for ticket 34",
                            ExpectedDate = new DateTime(2024, 3, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1935),
                            PriorityId = 1,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 24, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1935),
                            Status = "CLOSED",
                            Summary = "Sample ticket 34"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 1,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 2, 22, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1947),
                            Description = "Description for ticket 35",
                            ExpectedDate = new DateTime(2024, 2, 22, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1947),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 2, 8, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1947),
                            Status = "CLOSED",
                            Summary = "Sample ticket 35"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 2,
                            Description = "Description for ticket 36",
                            ExpectedDate = new DateTime(2024, 7, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1959),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 5, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1959),
                            Status = "OPEN",
                            Summary = "Sample ticket 36"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 1,
                            Description = "Description for ticket 37",
                            ExpectedDate = new DateTime(2024, 3, 26, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1970),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 25, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1970),
                            Status = "OPEN",
                            Summary = "Sample ticket 37"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 1,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 9, 22, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1981),
                            Description = "Description for ticket 38",
                            ExpectedDate = new DateTime(2024, 9, 22, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1981),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 15, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(1981),
                            Status = "CLOSED",
                            Summary = "Sample ticket 38"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 1,
                            Description = "Description for ticket 39",
                            ExpectedDate = new DateTime(2024, 5, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2010),
                            PriorityId = 1,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 5, 8, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2010),
                            Status = "NEW",
                            Summary = "Sample ticket 39"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 2,
                            Description = "Description for ticket 40",
                            ExpectedDate = new DateTime(2024, 1, 28, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2022),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 21, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2022),
                            Status = "OPEN",
                            Summary = "Sample ticket 40"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 1,
                            Description = "Description for ticket 41",
                            ExpectedDate = new DateTime(2024, 7, 26, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2034),
                            PriorityId = 1,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 25, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2034),
                            Status = "OPEN",
                            Summary = "Sample ticket 41"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 1,
                            Description = "Description for ticket 42",
                            ExpectedDate = new DateTime(2024, 7, 30, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2045),
                            PriorityId = 2,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 16, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2045),
                            Status = "OPEN",
                            Summary = "Sample ticket 42"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 2,
                            Description = "Description for ticket 43",
                            ExpectedDate = new DateTime(2024, 1, 19, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2056),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2056),
                            Status = "NEW",
                            Summary = "Sample ticket 43"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 1,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 3, 10, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2068),
                            Description = "Description for ticket 44",
                            ExpectedDate = new DateTime(2024, 3, 10, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2068),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2068),
                            Status = "CLOSED",
                            Summary = "Sample ticket 44"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 2,
                            Description = "Description for ticket 45",
                            ExpectedDate = new DateTime(2024, 4, 19, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2081),
                            PriorityId = 1,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 4, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2081),
                            Status = "NEW",
                            Summary = "Sample ticket 45"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            Description = "Description for ticket 46",
                            ExpectedDate = new DateTime(2024, 7, 31, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2092),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 17, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2092),
                            Status = "OPEN",
                            Summary = "Sample ticket 46"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 3,
                            Description = "Description for ticket 47",
                            ExpectedDate = new DateTime(2024, 3, 11, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2104),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 4, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2104),
                            Status = "NEW",
                            Summary = "Sample ticket 47"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 2,
                            Description = "Description for ticket 48",
                            ExpectedDate = new DateTime(2024, 9, 20, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2163),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 19, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2163),
                            Status = "OPEN",
                            Summary = "Sample ticket 48"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 2,
                            Description = "Description for ticket 49",
                            ExpectedDate = new DateTime(2024, 7, 3, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2175),
                            PriorityId = 2,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 2, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2175),
                            Status = "OPEN",
                            Summary = "Sample ticket 49"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 2,
                            Description = "Description for ticket 50",
                            ExpectedDate = new DateTime(2024, 6, 28, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2186),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 6, 27, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2186),
                            Status = "NEW",
                            Summary = "Sample ticket 50"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 2,
                            Description = "Description for ticket 51",
                            ExpectedDate = new DateTime(2024, 3, 23, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2198),
                            PriorityId = 1,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2198),
                            Status = "OPEN",
                            Summary = "Sample ticket 51"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 1,
                            Description = "Description for ticket 52",
                            ExpectedDate = new DateTime(2024, 7, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2209),
                            PriorityId = 2,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 8, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2209),
                            Status = "OPEN",
                            Summary = "Sample ticket 52"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 2,
                            Description = "Description for ticket 53",
                            ExpectedDate = new DateTime(2024, 8, 10, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2220),
                            PriorityId = 1,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 8, 3, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2220),
                            Status = "NEW",
                            Summary = "Sample ticket 53"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 1,
                            Description = "Description for ticket 54",
                            ExpectedDate = new DateTime(2024, 4, 23, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2232),
                            PriorityId = 2,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 4, 16, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2232),
                            Status = "NEW",
                            Summary = "Sample ticket 54"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 2,
                            Description = "Description for ticket 55",
                            ExpectedDate = new DateTime(2024, 7, 21, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2243),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 7, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2243),
                            Status = "NEW",
                            Summary = "Sample ticket 55"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 2,
                            Description = "Description for ticket 56",
                            ExpectedDate = new DateTime(2024, 10, 9, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2255),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 25, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2255),
                            Status = "NEW",
                            Summary = "Sample ticket 56"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 2,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 8, 23, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2308),
                            Description = "Description for ticket 57",
                            ExpectedDate = new DateTime(2024, 8, 23, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2308),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 8, 22, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2308),
                            Status = "CLOSED",
                            Summary = "Sample ticket 57"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 1,
                            ClosedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            ClosedDate = new DateTime(2024, 1, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2321),
                            Description = "Description for ticket 58",
                            ExpectedDate = new DateTime(2024, 1, 13, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2321),
                            PriorityId = 1,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 1, 12, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2321),
                            Status = "CLOSED",
                            Summary = "Sample ticket 58"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 2,
                            Description = "Description for ticket 59",
                            ExpectedDate = new DateTime(2024, 9, 14, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2332),
                            PriorityId = 3,
                            ProductId = 1,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 9, 7, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2332),
                            Status = "NEW",
                            Summary = "Sample ticket 59"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 1,
                            Description = "Description for ticket 60",
                            ExpectedDate = new DateTime(2024, 4, 4, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2344),
                            PriorityId = 3,
                            ProductId = 3,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 3, 28, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2344),
                            Status = "NEW",
                            Summary = "Sample ticket 60"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 1,
                            Description = "Description for ticket 61",
                            ExpectedDate = new DateTime(2024, 8, 6, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2355),
                            PriorityId = 3,
                            ProductId = 2,
                            RaisedBy = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RaisedDate = new DateTime(2024, 7, 23, 12, 57, 46, 683, DateTimeKind.Unspecified).AddTicks(2355),
                            Status = "OPEN",
                            Summary = "Sample ticket 61"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AccountConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            AccessFailedCount = 0,
                            AccountConfirmed = false,
                            ConcurrencyStamp = "99afd884-14e0-4350-a388-30e5b0fe9fb6",
                            Email = "test@gmail.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TEST@GMAIL.COM",
                            NormalizedUserName = "TEST@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECtGJNAruPxhwhiAfQVtpv4MkhUQGJAlsI29XUOzyVy1keaDI2jqO5mrEmdy4K89PQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9366ac3-aa68-4cca-b9e2-ac823a9a69a3",
                            TwoFactorEnabled = false,
                            UserName = "test@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "48395b9b-a292-4a48-80df-ebc6a057f6c0",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "6367a40d-3014-43bc-a704-135f41abae2d",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c5e57a7f-39e8-4007-940e-4468dfbb04f3",
                            RoleId = "48395b9b-a292-4a48-80df-ebc6a057f6c0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Attachment", b =>
                {
                    b.HasOne("Domain.Entities.Discussion", "Discussion")
                        .WithMany("Attachments")
                        .HasForeignKey("DiscussionId");

                    b.HasOne("Domain.Entities.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId");

                    b.Navigation("Discussion");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.HasOne("Domain.Entities.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("RaisedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AssignedTo");

                    b.Navigation("Category");

                    b.Navigation("Priority");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Discussion", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
