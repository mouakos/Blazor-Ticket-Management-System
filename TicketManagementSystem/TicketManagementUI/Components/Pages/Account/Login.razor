@page "/login"
@layout EmptyLayout
@using System.ComponentModel.DataAnnotations
@using Domain.Entities
@using Domain.Interfaces
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
@inject EncryptionHelper<LoginDto> Encryption

@rendermode InteractiveServer

<section class="vh-100">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="assets/imgs/login-img.jpg" class="img-fluid" alt="login-image"/>
            </div>
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <div class="d-flex flex-row align-items-center justify-content-center justify-content-lg-start">
                    <p class="lead fw-normal mb-0 me-3">Sign in with Email</p>
                </div>
                <Alert @ref="m_Alert"/>
                <EditForm Model="Input" method="post" FormName="Login" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator/>
                    <hr/>
                    <div class="form-floating mb-3">
                        <InputText id="email" @bind-Value="Input.Email" class="form-control" area-required="true"/>
                        <label for="email" class="form-label">Email</label>
                        <ValidationMessage For="() => Input.Email" class="text-danger"></ValidationMessage>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control" area-required="true"/>
                        <label for="password" class="form-label">Password</label>
                        <ValidationMessage For="() => Input.Password" class="text-danger"></ValidationMessage>
                    </div>
                    <div class="form-floating mb-3">
                        <InputCheckbox @bind-Value="Input.Remember"/>
                        Remember me
                    </div>
                    <div>
                        <button type="submit" class="w-100 btn btn-lg btn-primary">Login</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {
    private Alert? m_Alert;
    [SupplyParameterFromForm] private LoginInput Input { get; set; } = new();

    private async Task HandleValidSubmit()
    {
        // Hier die Login-Logik implementieren
        var verify = await AccountService.VerifyUserAsync(Input.Email!, Input.Password!);
        if (!verify.IsSuccess)
        {
            m_Alert?.ShowFailed(verify.ErrorMessage!);
            return;
        }

        var loginData = new LoginDto { UserName = verify.Value, Password = Input.Password, RememberMe = Input.Remember };
        var payload = Encryption.Encode(loginData);
        NavigationManager.NavigateTo($"processor/{payload}");
    }

    private class LoginInput
    {
        [Required] [EmailAddress] public string? Email { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string? Password { get; set; }

        public bool Remember { get; set; }
    }

}