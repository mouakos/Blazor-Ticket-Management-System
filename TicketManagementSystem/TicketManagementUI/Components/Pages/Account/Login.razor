@page "/login"
@using System.ComponentModel.DataAnnotations
@using Domain.Entities
@using Domain.Interfaces
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject IAccountService AccountService
@inject NavigationManager NavigationManager


<h1>Login</h1>

<div class="row">
    <div class="col-md-4">
        <section>
            <EditForm Model="Input" method="post" FormName="Login" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator/>
                <hr/>
                <div class="form-floating mb-3">
                    <InputText id="email" @bind-Value="Input.Email" class="form-control" area-required="true"/>
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger"></ValidationMessage>
                </div>
                <div class="form-floating mb-3">
                    <InputText id="password" type="password" @bind-Value="Input.Password" class="form-control" area-required="true"/>
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger"></ValidationMessage>
                </div>
                <div class="form-floating mb-3">
                    <InputCheckbox @bind-Value="Input.Remember"/>
                    Remember me
                </div>
                <div>
                    <button type="submit" class="m-100 btn btn-log btn-primary">Login</button>
                </div>
            </EditForm>
        </section>

    </div>
</div>


@code {
    [SupplyParameterFromForm]
    private LoginInput Input { get; set; } = new LoginInput();

    private async Task HandleValidSubmit()
    {
        // Hier die Login-Logik implementieren
        var verify = await AccountService.VerifyUser(Input.Email!, Input.Password!);
        if (!verify.IsSuccess)
        {
            // Alert
            return;
        }
        await SignInManager.PasswordSignInAsync(verify.Value!, Input.Password!, Input.Remember, false);
        NavigationManager.NavigateTo("/");
    }

    private class LoginInput
    {
        [Required]
        [EmailAddress]
        public string? Email { get; set; }

        [Required]
        [DataType(DataType.Password)]
        public string? Password { get; set; }

        public bool Remember { get; set; }
    }
}
