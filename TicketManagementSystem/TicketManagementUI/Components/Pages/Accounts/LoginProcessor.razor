@page "/processor/{payload}"
@using Domain.Entities
@using Microsoft.AspNetCore.Identity

@layout EmptyLayout

@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager
@inject EncryptionHelper<LoginDto> Encryption


Sign In ...

@code
{
    [Parameter] public string? Payload { get; set; }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        if (Payload != null)
        {
            var loginDto = Encryption.Decode(Payload);

            if (loginDto?.UserName != null)
            {
                var user = await SignInManager.UserManager.FindByEmailAsync(loginDto.UserName);
                if (loginDto.Password != null)
                {
                    var result = await SignInManager.PasswordSignInAsync(loginDto.UserName, loginDto.Password, loginDto.RememberMe, false);

                    if (result.Succeeded)
                    {
                        NavigationManager.NavigateTo(user is { AccountConfirmed: true } ? "/" : "/changepassword");
                    }
                }
            }
        }
    }

}